// Generated from cool/lexer/CoolLexer.g4 by ANTLR 4.10.1

    package cool.lexer;	

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class CoolLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.10.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		ERROR=1, CL_CLASS=2, INHERITS=3, NEW=4, IF=5, THEN=6, ELSE=7, FI=8, CASE=9, 
		ESAC=10, OF=11, LET=12, IN=13, WHILE=14, LOOP=15, POOL=16, TRUE=17, FALSE=18, 
		NOT=19, ISVOID=20, TYPE_ID=21, OBJ_ID=22, SELF=23, SELF_TYPE=24, INTEGER=25, 
		STRING=26, BAD_COMMENT=27, LINE_COMMENT=28, BLOCK_COMMENT=29, SEMI=30, 
		DOT=31, COLON=32, COMMA=33, COMPL=34, ASSIGN=35, LPAREN=36, RPAREN=37, 
		LBRACE=38, RBRACE=39, PLUS=40, MINUS=41, MULT=42, DIV=43, EQUAL=44, LT=45, 
		LE=46, CASE_EXPR=47, PARENT_CLASS=48, END_FILE=49, WS=50, INVALID=51;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"LETTER_LOWER", "LETTER_UPPER", "LETTER_ANY", "DIGIT", "CL_CLASS", "INHERITS", 
			"NEW", "IF", "THEN", "ELSE", "FI", "CASE", "ESAC", "OF", "LET", "IN", 
			"WHILE", "LOOP", "POOL", "TRUE", "FALSE", "NOT", "ISVOID", "TYPE_ID", 
			"OBJ_ID", "SELF", "SELF_TYPE", "INTEGER", "STRING", "BAD_COMMENT", "LINE_COMMENT", 
			"BLOCK_COMMENT", "SEMI", "DOT", "COLON", "COMMA", "COMPL", "ASSIGN", 
			"LPAREN", "RPAREN", "LBRACE", "RBRACE", "PLUS", "MINUS", "MULT", "DIV", 
			"EQUAL", "LT", "LE", "CASE_EXPR", "PARENT_CLASS", "END_FILE", "WS", "INVALID"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, "'class'", "'inherits'", "'new'", "'if'", "'then'", "'else'", 
			"'fi'", "'case'", "'esac'", "'of'", "'let'", "'in'", "'while'", "'loop'", 
			"'pool'", "'true'", "'false'", "'not'", "'isvoid'", null, null, "'self'", 
			"'SELF_TYPE'", null, null, "'*)'", null, null, "';'", "'.'", "':'", "','", 
			"'~'", "'<-'", "'('", "')'", "'{'", "'}'", "'+'", "'-'", "'*'", "'/'", 
			"'='", "'<'", "'<='", "'=>'", "'@'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "ERROR", "CL_CLASS", "INHERITS", "NEW", "IF", "THEN", "ELSE", "FI", 
			"CASE", "ESAC", "OF", "LET", "IN", "WHILE", "LOOP", "POOL", "TRUE", "FALSE", 
			"NOT", "ISVOID", "TYPE_ID", "OBJ_ID", "SELF", "SELF_TYPE", "INTEGER", 
			"STRING", "BAD_COMMENT", "LINE_COMMENT", "BLOCK_COMMENT", "SEMI", "DOT", 
			"COLON", "COMMA", "COMPL", "ASSIGN", "LPAREN", "RPAREN", "LBRACE", "RBRACE", 
			"PLUS", "MINUS", "MULT", "DIV", "EQUAL", "LT", "LE", "CASE_EXPR", "PARENT_CLASS", 
			"END_FILE", "WS", "INVALID"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}

	    
	    private void raiseError(String msg) {
	        setText(msg);
	        setType(ERROR);
	    }


	public CoolLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "CoolLexer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 28:
			STRING_action((RuleContext)_localctx, actionIndex);
			break;
		case 29:
			BAD_COMMENT_action((RuleContext)_localctx, actionIndex);
			break;
		case 31:
			BLOCK_COMMENT_action((RuleContext)_localctx, actionIndex);
			break;
		case 53:
			INVALID_action((RuleContext)_localctx, actionIndex);
			break;
		}
	}
	private void STRING_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0:

			        // Remove quotes
			        setText(getText().substring(1, getText().length()-1));

			        // Replace special characters
			        String cleanText = getText();
			        cleanText = cleanText.replace("\\t", "\t");
			        cleanText = cleanText.replace("\\\r\n", "\r\n");
			        cleanText = cleanText.replace("\\n", "\n");
			        cleanText = cleanText.replace("\\b", "\b");
			        cleanText = cleanText.replace("\\f", "\f");
			        // Removes only one \ in sequence
			        cleanText = cleanText.replaceAll("\\\\(?!\\\\)", "");

			        // Error checking
			        if(getText().length() > 1024) {
			            raiseError("String constant too long");
			        } else if (getText().contains("\0")) {
			            raiseError("String contains null character");
			        } else {
			            setText(cleanText);
			        }
			    
			break;
		case 1:
			raiseError("Unterminated string constant");
			break;
		case 2:
			raiseError("EOF in string constant");
			break;
		}
	}
	private void BAD_COMMENT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 3:
			 raiseError("Unmatched *)"); 
			break;
		}
	}
	private void BLOCK_COMMENT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 4:
			 skip();
			break;
		case 5:
			 raiseError("EOF in comment"); 
			break;
		}
	}
	private void INVALID_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 6:
			 
			    raiseError("Invalid character: "+getText());

			break;
		}
	}

	public static final String _serializedATN =
		"\u0004\u00003\u0170\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!\u0007"+
		"!\u0002\"\u0007\"\u0002#\u0007#\u0002$\u0007$\u0002%\u0007%\u0002&\u0007"+
		"&\u0002\'\u0007\'\u0002(\u0007(\u0002)\u0007)\u0002*\u0007*\u0002+\u0007"+
		"+\u0002,\u0007,\u0002-\u0007-\u0002.\u0007.\u0002/\u0007/\u00020\u0007"+
		"0\u00021\u00071\u00022\u00072\u00023\u00073\u00024\u00074\u00025\u0007"+
		"5\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002"+
		"\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004"+
		"\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005"+
		"\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0007\u0001\u0007\u0001\u0007"+
		"\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001\t\u0001\t\u0001\t\u0001"+
		"\t\u0001\t\u0001\n\u0001\n\u0001\n\u0001\u000b\u0001\u000b\u0001\u000b"+
		"\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001"+
		"\r\u0001\r\u0001\r\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001"+
		"\u000f\u0001\u000f\u0001\u000f\u0001\u0010\u0001\u0010\u0001\u0010\u0001"+
		"\u0010\u0001\u0010\u0001\u0010\u0001\u0011\u0001\u0011\u0001\u0011\u0001"+
		"\u0011\u0001\u0011\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0001"+
		"\u0012\u0001\u0013\u0001\u0013\u0001\u0013\u0001\u0013\u0001\u0013\u0001"+
		"\u0014\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0014\u0001"+
		"\u0015\u0001\u0015\u0001\u0015\u0001\u0015\u0001\u0016\u0001\u0016\u0001"+
		"\u0016\u0001\u0016\u0001\u0016\u0001\u0016\u0001\u0016\u0001\u0017\u0001"+
		"\u0017\u0001\u0017\u0001\u0017\u0005\u0017\u00d7\b\u0017\n\u0017\f\u0017"+
		"\u00da\t\u0017\u0001\u0018\u0001\u0018\u0001\u0018\u0001\u0018\u0005\u0018"+
		"\u00e0\b\u0018\n\u0018\f\u0018\u00e3\t\u0018\u0001\u0019\u0001\u0019\u0001"+
		"\u0019\u0001\u0019\u0001\u0019\u0001\u001a\u0001\u001a\u0001\u001a\u0001"+
		"\u001a\u0001\u001a\u0001\u001a\u0001\u001a\u0001\u001a\u0001\u001a\u0001"+
		"\u001a\u0001\u001b\u0004\u001b\u00f5\b\u001b\u000b\u001b\f\u001b\u00f6"+
		"\u0001\u001c\u0001\u001c\u0001\u001c\u0001\u001c\u0001\u001c\u0003\u001c"+
		"\u00fe\b\u001c\u0001\u001c\u0001\u001c\u0005\u001c\u0102\b\u001c\n\u001c"+
		"\f\u001c\u0105\t\u001c\u0001\u001c\u0001\u001c\u0001\u001c\u0003\u001c"+
		"\u010a\b\u001c\u0001\u001c\u0001\u001c\u0001\u001c\u0001\u001c\u0001\u001c"+
		"\u0003\u001c\u0111\b\u001c\u0001\u001d\u0001\u001d\u0001\u001d\u0001\u001d"+
		"\u0001\u001d\u0001\u001e\u0001\u001e\u0001\u001e\u0001\u001e\u0005\u001e"+
		"\u011c\b\u001e\n\u001e\f\u001e\u011f\t\u001e\u0001\u001e\u0003\u001e\u0122"+
		"\b\u001e\u0001\u001e\u0001\u001e\u0003\u001e\u0126\b\u001e\u0001\u001e"+
		"\u0001\u001e\u0001\u001f\u0001\u001f\u0001\u001f\u0001\u001f\u0001\u001f"+
		"\u0005\u001f\u012f\b\u001f\n\u001f\f\u001f\u0132\t\u001f\u0001\u001f\u0001"+
		"\u001f\u0001\u001f\u0001\u001f\u0001\u001f\u0001\u001f\u0003\u001f\u013a"+
		"\b\u001f\u0001 \u0001 \u0001!\u0001!\u0001\"\u0001\"\u0001#\u0001#\u0001"+
		"$\u0001$\u0001%\u0001%\u0001%\u0001&\u0001&\u0001\'\u0001\'\u0001(\u0001"+
		"(\u0001)\u0001)\u0001*\u0001*\u0001+\u0001+\u0001,\u0001,\u0001-\u0001"+
		"-\u0001.\u0001.\u0001/\u0001/\u00010\u00010\u00010\u00011\u00011\u0001"+
		"1\u00012\u00012\u00013\u00013\u00014\u00044\u0168\b4\u000b4\f4\u0169\u0001"+
		"4\u00014\u00015\u00015\u00015\u0003\u0103\u011d\u0130\u00006\u0001\u0000"+
		"\u0003\u0000\u0005\u0000\u0007\u0000\t\u0002\u000b\u0003\r\u0004\u000f"+
		"\u0005\u0011\u0006\u0013\u0007\u0015\b\u0017\t\u0019\n\u001b\u000b\u001d"+
		"\f\u001f\r!\u000e#\u000f%\u0010\'\u0011)\u0012+\u0013-\u0014/\u00151\u0016"+
		"3\u00175\u00187\u00199\u001a;\u001b=\u001c?\u001dA\u001eC\u001fE G!I\""+
		"K#M$O%Q&S\'U(W)Y*[+],_-a.c/e0g1i2k3\u0001\u0000\u0005\u0001\u0000az\u0001"+
		"\u0000AZ\u0002\u0000AZaz\u0001\u000009\u0003\u0000\t\n\f\r  \u0180\u0000"+
		"\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001\u0000\u0000\u0000\u0000\r"+
		"\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0000\u0000\u0011"+
		"\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0000\u0000\u0015"+
		"\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0000\u0000\u0019"+
		"\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000\u0000\u0000\u001d"+
		"\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000\u0000\u0000\u0000!\u0001"+
		"\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000\u0000%\u0001\u0000\u0000"+
		"\u0000\u0000\'\u0001\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0000"+
		"\u0000+\u0001\u0000\u0000\u0000\u0000-\u0001\u0000\u0000\u0000\u0000/"+
		"\u0001\u0000\u0000\u0000\u00001\u0001\u0000\u0000\u0000\u00003\u0001\u0000"+
		"\u0000\u0000\u00005\u0001\u0000\u0000\u0000\u00007\u0001\u0000\u0000\u0000"+
		"\u00009\u0001\u0000\u0000\u0000\u0000;\u0001\u0000\u0000\u0000\u0000="+
		"\u0001\u0000\u0000\u0000\u0000?\u0001\u0000\u0000\u0000\u0000A\u0001\u0000"+
		"\u0000\u0000\u0000C\u0001\u0000\u0000\u0000\u0000E\u0001\u0000\u0000\u0000"+
		"\u0000G\u0001\u0000\u0000\u0000\u0000I\u0001\u0000\u0000\u0000\u0000K"+
		"\u0001\u0000\u0000\u0000\u0000M\u0001\u0000\u0000\u0000\u0000O\u0001\u0000"+
		"\u0000\u0000\u0000Q\u0001\u0000\u0000\u0000\u0000S\u0001\u0000\u0000\u0000"+
		"\u0000U\u0001\u0000\u0000\u0000\u0000W\u0001\u0000\u0000\u0000\u0000Y"+
		"\u0001\u0000\u0000\u0000\u0000[\u0001\u0000\u0000\u0000\u0000]\u0001\u0000"+
		"\u0000\u0000\u0000_\u0001\u0000\u0000\u0000\u0000a\u0001\u0000\u0000\u0000"+
		"\u0000c\u0001\u0000\u0000\u0000\u0000e\u0001\u0000\u0000\u0000\u0000g"+
		"\u0001\u0000\u0000\u0000\u0000i\u0001\u0000\u0000\u0000\u0000k\u0001\u0000"+
		"\u0000\u0000\u0001m\u0001\u0000\u0000\u0000\u0003o\u0001\u0000\u0000\u0000"+
		"\u0005q\u0001\u0000\u0000\u0000\u0007s\u0001\u0000\u0000\u0000\tu\u0001"+
		"\u0000\u0000\u0000\u000b{\u0001\u0000\u0000\u0000\r\u0084\u0001\u0000"+
		"\u0000\u0000\u000f\u0088\u0001\u0000\u0000\u0000\u0011\u008b\u0001\u0000"+
		"\u0000\u0000\u0013\u0090\u0001\u0000\u0000\u0000\u0015\u0095\u0001\u0000"+
		"\u0000\u0000\u0017\u0098\u0001\u0000\u0000\u0000\u0019\u009d\u0001\u0000"+
		"\u0000\u0000\u001b\u00a2\u0001\u0000\u0000\u0000\u001d\u00a5\u0001\u0000"+
		"\u0000\u0000\u001f\u00a9\u0001\u0000\u0000\u0000!\u00ac\u0001\u0000\u0000"+
		"\u0000#\u00b2\u0001\u0000\u0000\u0000%\u00b7\u0001\u0000\u0000\u0000\'"+
		"\u00bc\u0001\u0000\u0000\u0000)\u00c1\u0001\u0000\u0000\u0000+\u00c7\u0001"+
		"\u0000\u0000\u0000-\u00cb\u0001\u0000\u0000\u0000/\u00d2\u0001\u0000\u0000"+
		"\u00001\u00db\u0001\u0000\u0000\u00003\u00e4\u0001\u0000\u0000\u00005"+
		"\u00e9\u0001\u0000\u0000\u00007\u00f4\u0001\u0000\u0000\u00009\u00f8\u0001"+
		"\u0000\u0000\u0000;\u0112\u0001\u0000\u0000\u0000=\u0117\u0001\u0000\u0000"+
		"\u0000?\u0129\u0001\u0000\u0000\u0000A\u013b\u0001\u0000\u0000\u0000C"+
		"\u013d\u0001\u0000\u0000\u0000E\u013f\u0001\u0000\u0000\u0000G\u0141\u0001"+
		"\u0000\u0000\u0000I\u0143\u0001\u0000\u0000\u0000K\u0145\u0001\u0000\u0000"+
		"\u0000M\u0148\u0001\u0000\u0000\u0000O\u014a\u0001\u0000\u0000\u0000Q"+
		"\u014c\u0001\u0000\u0000\u0000S\u014e\u0001\u0000\u0000\u0000U\u0150\u0001"+
		"\u0000\u0000\u0000W\u0152\u0001\u0000\u0000\u0000Y\u0154\u0001\u0000\u0000"+
		"\u0000[\u0156\u0001\u0000\u0000\u0000]\u0158\u0001\u0000\u0000\u0000_"+
		"\u015a\u0001\u0000\u0000\u0000a\u015c\u0001\u0000\u0000\u0000c\u015f\u0001"+
		"\u0000\u0000\u0000e\u0162\u0001\u0000\u0000\u0000g\u0164\u0001\u0000\u0000"+
		"\u0000i\u0167\u0001\u0000\u0000\u0000k\u016d\u0001\u0000\u0000\u0000m"+
		"n\u0007\u0000\u0000\u0000n\u0002\u0001\u0000\u0000\u0000op\u0007\u0001"+
		"\u0000\u0000p\u0004\u0001\u0000\u0000\u0000qr\u0007\u0002\u0000\u0000"+
		"r\u0006\u0001\u0000\u0000\u0000st\u0007\u0003\u0000\u0000t\b\u0001\u0000"+
		"\u0000\u0000uv\u0005c\u0000\u0000vw\u0005l\u0000\u0000wx\u0005a\u0000"+
		"\u0000xy\u0005s\u0000\u0000yz\u0005s\u0000\u0000z\n\u0001\u0000\u0000"+
		"\u0000{|\u0005i\u0000\u0000|}\u0005n\u0000\u0000}~\u0005h\u0000\u0000"+
		"~\u007f\u0005e\u0000\u0000\u007f\u0080\u0005r\u0000\u0000\u0080\u0081"+
		"\u0005i\u0000\u0000\u0081\u0082\u0005t\u0000\u0000\u0082\u0083\u0005s"+
		"\u0000\u0000\u0083\f\u0001\u0000\u0000\u0000\u0084\u0085\u0005n\u0000"+
		"\u0000\u0085\u0086\u0005e\u0000\u0000\u0086\u0087\u0005w\u0000\u0000\u0087"+
		"\u000e\u0001\u0000\u0000\u0000\u0088\u0089\u0005i\u0000\u0000\u0089\u008a"+
		"\u0005f\u0000\u0000\u008a\u0010\u0001\u0000\u0000\u0000\u008b\u008c\u0005"+
		"t\u0000\u0000\u008c\u008d\u0005h\u0000\u0000\u008d\u008e\u0005e\u0000"+
		"\u0000\u008e\u008f\u0005n\u0000\u0000\u008f\u0012\u0001\u0000\u0000\u0000"+
		"\u0090\u0091\u0005e\u0000\u0000\u0091\u0092\u0005l\u0000\u0000\u0092\u0093"+
		"\u0005s\u0000\u0000\u0093\u0094\u0005e\u0000\u0000\u0094\u0014\u0001\u0000"+
		"\u0000\u0000\u0095\u0096\u0005f\u0000\u0000\u0096\u0097\u0005i\u0000\u0000"+
		"\u0097\u0016\u0001\u0000\u0000\u0000\u0098\u0099\u0005c\u0000\u0000\u0099"+
		"\u009a\u0005a\u0000\u0000\u009a\u009b\u0005s\u0000\u0000\u009b\u009c\u0005"+
		"e\u0000\u0000\u009c\u0018\u0001\u0000\u0000\u0000\u009d\u009e\u0005e\u0000"+
		"\u0000\u009e\u009f\u0005s\u0000\u0000\u009f\u00a0\u0005a\u0000\u0000\u00a0"+
		"\u00a1\u0005c\u0000\u0000\u00a1\u001a\u0001\u0000\u0000\u0000\u00a2\u00a3"+
		"\u0005o\u0000\u0000\u00a3\u00a4\u0005f\u0000\u0000\u00a4\u001c\u0001\u0000"+
		"\u0000\u0000\u00a5\u00a6\u0005l\u0000\u0000\u00a6\u00a7\u0005e\u0000\u0000"+
		"\u00a7\u00a8\u0005t\u0000\u0000\u00a8\u001e\u0001\u0000\u0000\u0000\u00a9"+
		"\u00aa\u0005i\u0000\u0000\u00aa\u00ab\u0005n\u0000\u0000\u00ab \u0001"+
		"\u0000\u0000\u0000\u00ac\u00ad\u0005w\u0000\u0000\u00ad\u00ae\u0005h\u0000"+
		"\u0000\u00ae\u00af\u0005i\u0000\u0000\u00af\u00b0\u0005l\u0000\u0000\u00b0"+
		"\u00b1\u0005e\u0000\u0000\u00b1\"\u0001\u0000\u0000\u0000\u00b2\u00b3"+
		"\u0005l\u0000\u0000\u00b3\u00b4\u0005o\u0000\u0000\u00b4\u00b5\u0005o"+
		"\u0000\u0000\u00b5\u00b6\u0005p\u0000\u0000\u00b6$\u0001\u0000\u0000\u0000"+
		"\u00b7\u00b8\u0005p\u0000\u0000\u00b8\u00b9\u0005o\u0000\u0000\u00b9\u00ba"+
		"\u0005o\u0000\u0000\u00ba\u00bb\u0005l\u0000\u0000\u00bb&\u0001\u0000"+
		"\u0000\u0000\u00bc\u00bd\u0005t\u0000\u0000\u00bd\u00be\u0005r\u0000\u0000"+
		"\u00be\u00bf\u0005u\u0000\u0000\u00bf\u00c0\u0005e\u0000\u0000\u00c0("+
		"\u0001\u0000\u0000\u0000\u00c1\u00c2\u0005f\u0000\u0000\u00c2\u00c3\u0005"+
		"a\u0000\u0000\u00c3\u00c4\u0005l\u0000\u0000\u00c4\u00c5\u0005s\u0000"+
		"\u0000\u00c5\u00c6\u0005e\u0000\u0000\u00c6*\u0001\u0000\u0000\u0000\u00c7"+
		"\u00c8\u0005n\u0000\u0000\u00c8\u00c9\u0005o\u0000\u0000\u00c9\u00ca\u0005"+
		"t\u0000\u0000\u00ca,\u0001\u0000\u0000\u0000\u00cb\u00cc\u0005i\u0000"+
		"\u0000\u00cc\u00cd\u0005s\u0000\u0000\u00cd\u00ce\u0005v\u0000\u0000\u00ce"+
		"\u00cf\u0005o\u0000\u0000\u00cf\u00d0\u0005i\u0000\u0000\u00d0\u00d1\u0005"+
		"d\u0000\u0000\u00d1.\u0001\u0000\u0000\u0000\u00d2\u00d8\u0003\u0003\u0001"+
		"\u0000\u00d3\u00d7\u0003\u0005\u0002\u0000\u00d4\u00d7\u0005_\u0000\u0000"+
		"\u00d5\u00d7\u0003\u0007\u0003\u0000\u00d6\u00d3\u0001\u0000\u0000\u0000"+
		"\u00d6\u00d4\u0001\u0000\u0000\u0000\u00d6\u00d5\u0001\u0000\u0000\u0000"+
		"\u00d7\u00da\u0001\u0000\u0000\u0000\u00d8\u00d6\u0001\u0000\u0000\u0000"+
		"\u00d8\u00d9\u0001\u0000\u0000\u0000\u00d90\u0001\u0000\u0000\u0000\u00da"+
		"\u00d8\u0001\u0000\u0000\u0000\u00db\u00e1\u0003\u0001\u0000\u0000\u00dc"+
		"\u00e0\u0003\u0005\u0002\u0000\u00dd\u00e0\u0005_\u0000\u0000\u00de\u00e0"+
		"\u0003\u0007\u0003\u0000\u00df\u00dc\u0001\u0000\u0000\u0000\u00df\u00dd"+
		"\u0001\u0000\u0000\u0000\u00df\u00de\u0001\u0000\u0000\u0000\u00e0\u00e3"+
		"\u0001\u0000\u0000\u0000\u00e1\u00df\u0001\u0000\u0000\u0000\u00e1\u00e2"+
		"\u0001\u0000\u0000\u0000\u00e22\u0001\u0000\u0000\u0000\u00e3\u00e1\u0001"+
		"\u0000\u0000\u0000\u00e4\u00e5\u0005s\u0000\u0000\u00e5\u00e6\u0005e\u0000"+
		"\u0000\u00e6\u00e7\u0005l\u0000\u0000\u00e7\u00e8\u0005f\u0000\u0000\u00e8"+
		"4\u0001\u0000\u0000\u0000\u00e9\u00ea\u0005S\u0000\u0000\u00ea\u00eb\u0005"+
		"E\u0000\u0000\u00eb\u00ec\u0005L\u0000\u0000\u00ec\u00ed\u0005F\u0000"+
		"\u0000\u00ed\u00ee\u0005_\u0000\u0000\u00ee\u00ef\u0005T\u0000\u0000\u00ef"+
		"\u00f0\u0005Y\u0000\u0000\u00f0\u00f1\u0005P\u0000\u0000\u00f1\u00f2\u0005"+
		"E\u0000\u0000\u00f26\u0001\u0000\u0000\u0000\u00f3\u00f5\u0003\u0007\u0003"+
		"\u0000\u00f4\u00f3\u0001\u0000\u0000\u0000\u00f5\u00f6\u0001\u0000\u0000"+
		"\u0000\u00f6\u00f4\u0001\u0000\u0000\u0000\u00f6\u00f7\u0001\u0000\u0000"+
		"\u0000\u00f78\u0001\u0000\u0000\u0000\u00f8\u0103\u0005\"\u0000\u0000"+
		"\u00f9\u00fa\u0005\\\u0000\u0000\u00fa\u0102\u0005\"\u0000\u0000\u00fb"+
		"\u00fd\u0005\\\u0000\u0000\u00fc\u00fe\u0005\r\u0000\u0000\u00fd\u00fc"+
		"\u0001\u0000\u0000\u0000\u00fd\u00fe\u0001\u0000\u0000\u0000\u00fe\u00ff"+
		"\u0001\u0000\u0000\u0000\u00ff\u0102\u0005\n\u0000\u0000\u0100\u0102\t"+
		"\u0000\u0000\u0000\u0101\u00f9\u0001\u0000\u0000\u0000\u0101\u00fb\u0001"+
		"\u0000\u0000\u0000\u0101\u0100\u0001\u0000\u0000\u0000\u0102\u0105\u0001"+
		"\u0000\u0000\u0000\u0103\u0104\u0001\u0000\u0000\u0000\u0103\u0101\u0001"+
		"\u0000\u0000\u0000\u0104\u0110\u0001\u0000\u0000\u0000\u0105\u0103\u0001"+
		"\u0000\u0000\u0000\u0106\u0107\u0005\"\u0000\u0000\u0107\u0111\u0006\u001c"+
		"\u0000\u0000\u0108\u010a\u0005\r\u0000\u0000\u0109\u0108\u0001\u0000\u0000"+
		"\u0000\u0109\u010a\u0001\u0000\u0000\u0000\u010a\u010b\u0001\u0000\u0000"+
		"\u0000\u010b\u010c\u0005\n\u0000\u0000\u010c\u010d\u0001\u0000\u0000\u0000"+
		"\u010d\u0111\u0006\u001c\u0001\u0000\u010e\u010f\u0005\u0000\u0000\u0001"+
		"\u010f\u0111\u0006\u001c\u0002\u0000\u0110\u0106\u0001\u0000\u0000\u0000"+
		"\u0110\u0109\u0001\u0000\u0000\u0000\u0110\u010e\u0001\u0000\u0000\u0000"+
		"\u0111:\u0001\u0000\u0000\u0000\u0112\u0113\u0005*\u0000\u0000\u0113\u0114"+
		"\u0005)\u0000\u0000\u0114\u0115\u0001\u0000\u0000\u0000\u0115\u0116\u0006"+
		"\u001d\u0003\u0000\u0116<\u0001\u0000\u0000\u0000\u0117\u0118\u0005-\u0000"+
		"\u0000\u0118\u0119\u0005-\u0000\u0000\u0119\u011d\u0001\u0000\u0000\u0000"+
		"\u011a\u011c\t\u0000\u0000\u0000\u011b\u011a\u0001\u0000\u0000\u0000\u011c"+
		"\u011f\u0001\u0000\u0000\u0000\u011d\u011e\u0001\u0000\u0000\u0000\u011d"+
		"\u011b\u0001\u0000\u0000\u0000\u011e\u0125\u0001\u0000\u0000\u0000\u011f"+
		"\u011d\u0001\u0000\u0000\u0000\u0120\u0122\u0005\r\u0000\u0000\u0121\u0120"+
		"\u0001\u0000\u0000\u0000\u0121\u0122\u0001\u0000\u0000\u0000\u0122\u0123"+
		"\u0001\u0000\u0000\u0000\u0123\u0126\u0005\n\u0000\u0000\u0124\u0126\u0005"+
		"\u0000\u0000\u0001\u0125\u0121\u0001\u0000\u0000\u0000\u0125\u0124\u0001"+
		"\u0000\u0000\u0000\u0126\u0127\u0001\u0000\u0000\u0000\u0127\u0128\u0006"+
		"\u001e\u0004\u0000\u0128>\u0001\u0000\u0000\u0000\u0129\u012a\u0005(\u0000"+
		"\u0000\u012a\u012b\u0005*\u0000\u0000\u012b\u0130\u0001\u0000\u0000\u0000"+
		"\u012c\u012f\u0003?\u001f\u0000\u012d\u012f\t\u0000\u0000\u0000\u012e"+
		"\u012c\u0001\u0000\u0000\u0000\u012e\u012d\u0001\u0000\u0000\u0000\u012f"+
		"\u0132\u0001\u0000\u0000\u0000\u0130\u0131\u0001\u0000\u0000\u0000\u0130"+
		"\u012e\u0001\u0000\u0000\u0000\u0131\u0139\u0001\u0000\u0000\u0000\u0132"+
		"\u0130\u0001\u0000\u0000\u0000\u0133\u0134\u0005*\u0000\u0000\u0134\u0135"+
		"\u0005)\u0000\u0000\u0135\u0136\u0001\u0000\u0000\u0000\u0136\u013a\u0006"+
		"\u001f\u0005\u0000\u0137\u0138\u0005\u0000\u0000\u0001\u0138\u013a\u0006"+
		"\u001f\u0006\u0000\u0139\u0133\u0001\u0000\u0000\u0000\u0139\u0137\u0001"+
		"\u0000\u0000\u0000\u013a@\u0001\u0000\u0000\u0000\u013b\u013c\u0005;\u0000"+
		"\u0000\u013cB\u0001\u0000\u0000\u0000\u013d\u013e\u0005.\u0000\u0000\u013e"+
		"D\u0001\u0000\u0000\u0000\u013f\u0140\u0005:\u0000\u0000\u0140F\u0001"+
		"\u0000\u0000\u0000\u0141\u0142\u0005,\u0000\u0000\u0142H\u0001\u0000\u0000"+
		"\u0000\u0143\u0144\u0005~\u0000\u0000\u0144J\u0001\u0000\u0000\u0000\u0145"+
		"\u0146\u0005<\u0000\u0000\u0146\u0147\u0005-\u0000\u0000\u0147L\u0001"+
		"\u0000\u0000\u0000\u0148\u0149\u0005(\u0000\u0000\u0149N\u0001\u0000\u0000"+
		"\u0000\u014a\u014b\u0005)\u0000\u0000\u014bP\u0001\u0000\u0000\u0000\u014c"+
		"\u014d\u0005{\u0000\u0000\u014dR\u0001\u0000\u0000\u0000\u014e\u014f\u0005"+
		"}\u0000\u0000\u014fT\u0001\u0000\u0000\u0000\u0150\u0151\u0005+\u0000"+
		"\u0000\u0151V\u0001\u0000\u0000\u0000\u0152\u0153\u0005-\u0000\u0000\u0153"+
		"X\u0001\u0000\u0000\u0000\u0154\u0155\u0005*\u0000\u0000\u0155Z\u0001"+
		"\u0000\u0000\u0000\u0156\u0157\u0005/\u0000\u0000\u0157\\\u0001\u0000"+
		"\u0000\u0000\u0158\u0159\u0005=\u0000\u0000\u0159^\u0001\u0000\u0000\u0000"+
		"\u015a\u015b\u0005<\u0000\u0000\u015b`\u0001\u0000\u0000\u0000\u015c\u015d"+
		"\u0005<\u0000\u0000\u015d\u015e\u0005=\u0000\u0000\u015eb\u0001\u0000"+
		"\u0000\u0000\u015f\u0160\u0005=\u0000\u0000\u0160\u0161\u0005>\u0000\u0000"+
		"\u0161d\u0001\u0000\u0000\u0000\u0162\u0163\u0005@\u0000\u0000\u0163f"+
		"\u0001\u0000\u0000\u0000\u0164\u0165\u0005\u0000\u0000\u0001\u0165h\u0001"+
		"\u0000\u0000\u0000\u0166\u0168\u0007\u0004\u0000\u0000\u0167\u0166\u0001"+
		"\u0000\u0000\u0000\u0168\u0169\u0001\u0000\u0000\u0000\u0169\u0167\u0001"+
		"\u0000\u0000\u0000\u0169\u016a\u0001\u0000\u0000\u0000\u016a\u016b\u0001"+
		"\u0000\u0000\u0000\u016b\u016c\u00064\u0004\u0000\u016cj\u0001\u0000\u0000"+
		"\u0000\u016d\u016e\t\u0000\u0000\u0000\u016e\u016f\u00065\u0007\u0000"+
		"\u016fl\u0001\u0000\u0000\u0000\u0012\u0000\u00d6\u00d8\u00df\u00e1\u00f6"+
		"\u00fd\u0101\u0103\u0109\u0110\u011d\u0121\u0125\u012e\u0130\u0139\u0169"+
		"\b\u0001\u001c\u0000\u0001\u001c\u0001\u0001\u001c\u0002\u0001\u001d\u0003"+
		"\u0006\u0000\u0000\u0001\u001f\u0004\u0001\u001f\u0005\u00015\u0006";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}